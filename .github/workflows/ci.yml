name: Terraform -> Ansible CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_DIR: terraform
      ANSIBLE_DIR: ansible

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip jq python3-pip ssh
          python3 -m pip install --upgrade pip
          python3 -m pip install ansible

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -input=false

      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }}
        run: terraform apply -auto-approve

      - name: Generate Ansible inventory from Terraform outputs
        run: |
          chmod +x ./scripts/generate_inventory.sh
          ./scripts/generate_inventory.sh ${TF_DIR} ${ANSIBLE_DIR}/inventory.ini

      - name: Add SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible
        working-directory: ${{ env.ANSIBLE_DIR }}
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i inventory.ini site.yml --ssh-extra-args="-o StrictHostKeyChecking=no"
